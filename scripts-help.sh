#!/bin/bash

echo "📋 JavaFlow - Guía de Scripts"
echo "============================="
echo ""
echo "🎯 Scripts Disponibles:"
echo ""
echo "1. 🚀 ./run.sh"
echo "   - Script principal con manejo inteligente de puertos"
echo "   - Detecta y maneja conflictos de puerto 8080 automáticamente"
echo "   - Configura Maven y Java automáticamente"
echo "   - Ejecuta con perfil de desarrollo (H2)"
echo ""
echo "2. ▶️  ./start.sh"
echo "   - Script simple que delega a run.sh"
echo "   - Alias conveniente para run.sh"
echo ""
echo "3. 🛑 ./stop.sh"
echo "   - Detiene procesos JavaFlow de forma inteligente"
echo "   - Busca procesos específicos de JavaFlow"
echo "   - Terminación graceful primero, forzada si es necesario"
echo "   - Verifica que el puerto 8080 quede libre"
echo ""
echo "4. 🔧 ./install.sh"
echo "   - Instalación inicial del proyecto"
echo "   - Verifica dependencias (Java, Maven)"
echo "   - Compila el proyecto"
echo ""
echo "5. 📋 ./scripts-help.sh"
echo "   - Esta ayuda"
echo ""
echo "🎯 Flujo Recomendado:"
echo ""
echo "  Primera vez:"
echo "    ./install.sh    # Instalar dependencias"
echo "    ./run.sh        # Ejecutar (maneja puertos automáticamente)"
echo ""
echo "  Uso normal:"
echo "    ./run.sh        # Iniciar (recomendado)"
echo "    ./start.sh      # Iniciar (alias de run.sh)"
echo "    ./stop.sh       # Detener"
echo ""
echo "🔍 Verificar Estado:"
echo "    lsof -i :8080                    # Ver qué usa el puerto 8080"
echo "    curl http://localhost:8080/actuator/health  # Verificar salud"
echo "    curl http://localhost:8080/api/v1/workflows # Probar API"
echo ""
echo "💡 Consejos:"
echo "  - run.sh maneja automáticamente conflictos de puerto"
echo "  - stop.sh es más seguro que killall java"
echo "  - Usa start.sh si prefieres un nombre más corto"
echo ""